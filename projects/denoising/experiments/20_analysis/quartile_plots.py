# coding: utf-8
res.quartile_plot(res.fits_best, 0, 0+16, 1, xlabel=u'Populiacijos dydis', labels=[20, 40, 60, 80, 100, 120, 140, 160, 180, 200, 250, 300, 350, 400, 450, 500])
res.quartile_plot(res.fits_best, 0, 0+16, 1, xlabel=u'Populiacijos dydis', labels=[20, 40, 60, 80, 100, 120, 140, 160, 180, 200, 250, 300, 350, 400, 450, 500], ylabel=u'Konvergavimo greičio įvertis')
res.quartile_plot(res.fits_best, 0, 0+16, 1, xlabel=u'Populiacijos dydis', labels=[20, 40, 60, 80, 100, 120, 140, 160, 180, 200, 250, 300, 350, 400, 450, 500], ylabel=u'Konvergavimo greičio įvertis')
res.quartile_plot(res.fits_best, 0, 0+16, 1, xlabel=u'Populiacijos dydis', labels=[20, 40, 60, 80, 100, 120, 140, 160, 180, 200, 250, 300, 350, 400, 450, 500], ylabel=u'Konvergavimo greičio įvertis')
res.quartile_plot(res.fits_best, 16, 16+6, 1, xlabel=u'Elitizmo parametras', labels=[0, 1, 2, 3, 4, 5], ylabel=u'Konvergavimo greičio įvertis')
res.quartile_plot(res.fits_best, 22, 22+3, 1, xlabel=u'Atrankos strategija', labels=['roulette', 'tournament', 'rank'], ylabel=u'Konvergavimo greičio įvertis')
res.quartile_plot(res.fits_best, 22, 22+3, 1, xlabel=u'Atrankos strategija', labels=['roulette', 'tournament', 'rank'], ylabel=u'Konvergavimo greičio įvertis')
res.quartile_plot(res.fits_best, 16, 16+6, 1, xlabel=u'Elitizmo parametras', labels=[0, 1, 2, 3, 4, 5], ylabel=u'Konvergavimo greičio įvertis')
res.quartile_plot(res.fits_best, 29, 29+3, 1, xlabel=u'Kryžminimo strategija', labels=['one_point', 'two_point', 'uniform'], ylabel=u'Konvergavimo greičio įvertis')
res.quartile_plot(res.fits_best, 32, 32+11, 1, xlabel=u'Kryžminimo tikimybė', labels=[0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0], ylabel=u'Konvergavimo greičio įvertis')
res.quartile_plot(res.fits_best, 32, 32+11, 1, xlabel=u'Kryžminimo tikimybė', labels=[0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0], ylabel=u'Konvergavimo greičio įvertis')
res.quartile_plot(res.fits_best, 43, 43+10, 1, xlabel=u'Mutacijos tikimybė', labels=[0.001, 0.003, 0.005, 0.007, 0.009, 0.01, 0.03, 0.05, 0.07, 0.09], ylabel=u'Konvergavimo greičio įvertis')
res.quartile_plot(res.fits_best, 53, 53+10, 1, xlabel=u'Chromosomos ilgis', labels=[10, 20, 30, 40, 50, 60, 70, 80, 90, 100], ylabel=u'Konvergavimo greičio įvertis')
res.quartile_plot(res.fits_best, 63, 63+6, 1, xlabel=u'Triukšmo tipas ir stiprumas', labels=['snp-0.1], ylabel=u'Konvergavimo greičio įvertis')
res.quartile_plot(res.fits_best, 63, 63+6, 1, xlabel=u'Triukšmo tipas ir stiprumas', labels=['snp-0.1', 'snp-0.3', 'snp-0.5', 'gaussian-0.1', 'gaussian-0.3', 'gaussian-0.5'], ylabel=u'Konvergavimo greičio įvertis')
res.quartile_plot(res.fits_best, 63, 63+6, 1, xlabel=u'Triukšmo tipas ir stiprumas', labels=['snp-0.1', 'snp-0.3', 'snp-0.5', 'gauss-0.1', 'gauss-0.3', 'gauss-0.5'], ylabel=u'Konvergavimo greičio įvertis')
res.quartile_plot(res.fits_best, 0, 0+16, 3, xlabel=u'Populiacijos dydis', labels=[20, 40, 60, 80, 100, 120, 140, 160, 180, 200, 250, 300, 350, 400, 450, 500], ylabel=u' įvertis')
res.quartile_plot(res.fits_best, 0, 0+16, 3, xlabel=u'Populiacijos dydis', labels=[20, 40, 60, 80, 100, 120, 140, 160, 180, 200, 250, 300, 350, 400, 450, 500], ylabel=u'Sprendinio kokybės įvertis', log=False)
res.quartile_plot(res.fits_best, 0, 0+16, 3, xlabel=u'Populiacijos dydis', labels=[20, 40, 60, 80, 100, 120, 140, 160, 180, 200, 250, 300, 350, 400, 450, 500], ylabel=u'Sprendinio kokybės įvertis', log=False, ylim=[0.75, 1.05])
res.quartile_plot(res.fits_best, 16, 16+6, 3, xlabel=u'Elitizmo parametras', labels=[0, 1, 2, 3, 4, 5], ylabel=u'Sprendinio kokybės įvertis', log=False, ylim=[0.75, 1.05])
res.quartile_plot(res.fits_best, 22, 22+3, 3, xlabel=u'Atrankos strategija', labels=['roulette', 'tournament', 'rank'], ylabel=u'Sprendinio kokybės įvertis', log=False, ylim=[0.75, 1.05])
res.quartile_plot(res.fits_best, 29, 29+3, 3, xlabel=u'Kryžminimo strategija', labels=['one_point', 'two_point', 'uniform'], ylabel=u'Sprendinio kokybės įvertis', log=False, ylim=[0.75, 1.05])
res.quartile_plot(res.fits_best, 32, 32+11, 3, xlabel=u'Kryžminimo tikimybė', labels=[0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0], ylabel=u'Sprendinio kokybės įvertis', log=False, ylim=[0.75, 1.05])
res.quartile_plot(res.fits_best, 43, 43+10, 3, xlabel=u'Mutacijos tikimybė', labels=[0.001, 0.003, 0.005, 0.007, 0.009, 0.01, 0.03, 0.05, 0.07, 0.09], ylabel=u'Sprendinio kokybės įvertis', log=False, ylim=[0.75, 1.05])
res.quartile_plot(res.fits_best, 53, 53+10, 3, xlabel=u'Chromosomos ilgis', labels=[10, 20, 30, 40, 50, 60, 70, 80, 90, 100], ylabel=u'Sprendinio kokybės įvertis', log=False, ylim=[0.75, 1.05])
res.quartile_plot(res.fits_best, 63, 63+6, 3, xlabel=u'Triukšmo tipas ir stiprumas', labels=['snp-0.1', 'snp-0.3', 'snp-0.5', 'gauss-0.1', 'gauss-0.3', 'gauss-0.5'], ylabel=u'Sprendinio kokybės įvertis', log=False, ylim=[0.75, 1.05])